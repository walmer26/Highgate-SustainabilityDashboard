services:
  db:
    container_name: db
    image: postgres:13
    volumes:
      - database:/var/lib/postgresql/data
    env_file:
      - .env.production
    ports:
      - "5432:5432"
    networks:
      - sustainability-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  web:
    container_name: sustainability_app_production
    image: walmer26/highgate-sustainability:latest
    command: sh -c "./wait-for-db.sh db gunicorn --bind 0.0.0.0:8000 project.wsgi:application"
    volumes:
      - settings:/usr/src/app/project/settings
      - media:/usr/src/app/media
    ports:
      - "8010:8000"
    env_file:
      - .env.production
    depends_on:
      - db
    networks:
      - sustainability-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 10
    restart: always

  task_worker:
    container_name: sustainability_task_worker_production
    image: walmer26/highgate-sustainability:latest
    command: sh -c "./wait-for-db.sh db python manage.py process_tasks"
    volumes:
      - settings:/usr/src/app/project/settings
      - media:/usr/src/app/media
    env_file:
      - .env.production
    environment:
      - DJANGO_COMMAND=process_tasks
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_healthy
    networks:
      - sustainability-network
    restart: always

volumes:
  database:
  settings:
  media:

networks:
  sustainability-network:
